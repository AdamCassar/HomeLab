version: "3.4"
services:
  broker:
    image: docker.io/library/redis:7
    restart: unless-stopped
    volumes:
      - redisdata:/data
    networks:
      proxy:
      
  db:
    image: docker.io/library/postgres:15
    restart: unless-stopped
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: paperless
      POSTGRES_USER: paperless
      POSTGRES_PASSWORD: paperless
    networks:
      proxy:
      
  webserver:
    image: ghcr.io/paperless-ngx/paperless-ngx:latest
    restart: unless-stopped
    depends_on:
      - db
      - broker
      - gotenberg
      - tika
    #ports:
    #  - "8001:8000"
    volumes:
      - data:/usr/src/paperless/data
      - media:/usr/src/paperless/media
      - export:/usr/src/paperless/export
      - consume:/usr/src/paperless/consume
    env_file: .env
    environment:
      PAPERLESS_REDIS: redis://broker:6379
      PAPERLESS_DBHOST: db
      PAPERLESS_TIKA_ENABLED: 1
      PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://gotenberg:3000
      PAPERLESS_TIKA_ENDPOINT: http://tika:9998
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.paperless.entrypoints=http"
      - "traefik.http.routers.paperless.rule=Host(`paperless.cassar.online`)"
      - "traefik.http.middlewares.paperless-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.paperless.middlewares=paperless-https-redirect"
      - "traefik.http.routers.paperless-secure.entrypoints=https"
      - "traefik.http.routers.paperless-secure.rule=Host(`paperless.cassar.online`)"
      - "traefik.http.routers.paperless-secure.tls=true"
      - "traefik.http.routers.paperless-secure.service=paperless"
      - "traefik.http.services.paperless.loadbalancer.server.port=8000"
      - "traefik.docker.network=proxy"
    networks:
      proxy:
      
  gotenberg:
    image: docker.io/gotenberg/gotenberg:7.10
    restart: unless-stopped
    command:
      - "gotenberg"
      - "--chromium-disable-javascript=true"
      - "--chromium-allow-list=file:///tmp/.*"
    networks:
      proxy:

  tika:
    image: ghcr.io/paperless-ngx/tika:latest
    restart: unless-stopped
    networks:
      proxy:

volumes:
  data:
  media:
    driver: local
    driver_opts:
      type: cifs
      device: "//win-server-04.cassar.online/Paperless-NGX/media"
      o: "username=papersvcacct@cassar.online,password=asdlvkjn2490ievdhus9c78v78889!%%^,uid=1000,gid=1000"
  pgdata:
  redisdata:
  export:
    driver: local
    driver_opts:
      type: cifs
      device: "//win-server-04.cassar.online/Paperless-NGX/export"
      o: "username=papersvcacct@cassar.online,password=asdlvkjn2490ievdhus9c78v78889!%%^,uid=1000,gid=1000"
  consume:
    driver: local
    driver_opts:
      type: cifs
      device: "//win-server-04.cassar.online/Paperless-NGX/consume"
      o: "username=papersvcacct@cassar.online,password=asdlvkjn2490ievdhus9c78v78889!%%^,uid=1000,gid=1000"

networks:
  proxy:
    external: true